version: 1.13.0.{build}
pull_requests:
  do_not_increment_build_number: true
shallow_clone: true
services:
- docker
stack: python 3
environment:
  TWINE_USERNAME: cboulay
# Note: TWINE_PASSWORD is set in Appveyor web settings
  CIBW_BUILD_VERBOSITY: 3
  CIBW_TEST_COMMAND: python -c "import pylsl; print(pylsl.library_version()); print(pylsl.local_clock())"
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu1804
      BUILD_LSL_IMAGE: alpine
      CIBW_PLATFORM: linux
      CIBW_MANYLINUX1_X86_64_IMAGE: henriquegemignani/docker-nod-ci
      CIBW_BUILD: "*-manylinux1_x86_64"
      CIBW_SKIP: "cp27-* cp34-*"

#https://www.appveyor.com/docs/getting-started-with-appveyor-for-linux/#running-windows-and-linux-builds-side-by-side
install:
- pip install cibuildwheel\<2

before_build:
- chmod +x ci/build_liblsl_linux.sh
# docker service is not available during install so we build liblsl here instead.
# liblsl is built on alpine because it has a more portable C lib, and other libs are statically linked, making pylsl portable.
# Though the linked libs are not compatible with cp27 and cp34.
- docker run --rm -v $(pwd):/host -w /host $BUILD_LSL_IMAGE /host/ci/build_liblsl_linux.sh

build_script:
- cibuildwheel --output-dir wheelhouse
- ps: >-
      if ($env:APPVEYOR_REPO_TAG -eq "true") {
        python -m pip install twine
        python -m twine upload wheelhouse/*.whl
      } Else {
        echo "Not uploading to pypi; APPVEYOR_REPO_TAG : $env:APPVEYOR_REPO_TAG"
      }

#after_build
# before_test
# test_script
# after_test

artifacts:
- path: "wheelhouse\\*.whl"
  name: Wheels

# before_deploy
# deploy_script:
# after_deploy
